{"ast":null,"code":"import _classCallCheck from \"C:/Users/DTI_UCH/Desktop/Angular10/admin/template/template_angularjs10/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/DTI_UCH/Desktop/Angular10/admin/template/template_angularjs10/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NgModel, FormsModule } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\n\nvar HighlightJsDirective = /*#__PURE__*/function () {\n  function HighlightJsDirective(el, ngModel, doc) {\n    _classCallCheck(this, HighlightJsDirective);\n\n    this.el = el;\n    this.ngModel = ngModel;\n    this.doc = doc;\n    this.lang = 'html';\n  }\n\n  _createClass(HighlightJsDirective, [{\n    key: \"escapeHTML\",\n    value: function escapeHTML(str) {\n      return (str || '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.destroy();\n      this.codeEl = this.doc.createElement('pre');\n\n      if (this.lang) {\n        this.codeEl.className = this.lang;\n      }\n\n      this.codeEl.innerHTML = this.code || '' + this.el.nativeElement.innerHTML.trim();\n      this.parentEl = this.el.nativeElement.parentNode;\n      this.parentEl.insertBefore(this.codeEl, this.el.nativeElement.nextSibling);\n      hljs.configure(Object.assign({}, this.options));\n      hljs.highlightBlock(this.codeEl);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.codeEl) {\n        this.parentEl.removeChild(this.codeEl);\n        this.codeEl = null;\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.init();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      if (this.ngModel) {\n        this.modelValue$ = this.ngModel.valueChanges.subscribe(function (res) {\n          _this.code = _this.escapeHTML(res);\n\n          _this.init();\n        });\n      } else {\n        this.initMutation();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy();\n      this.destroyMutation();\n\n      if (this.modelValue$) {\n        this.modelValue$.unsubscribe();\n      }\n    }\n  }, {\n    key: \"initMutation\",\n    value: function initMutation() {\n      if (typeof MutationObserver === 'undefined') {\n        return;\n      }\n\n      this.observer = new MutationObserver(this.init.bind(this));\n      this.observer.observe(this.el.nativeElement, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }\n  }, {\n    key: \"destroyMutation\",\n    value: function destroyMutation() {\n      if (!this.observer) {\n        return;\n      }\n\n      this.observer.disconnect();\n    }\n  }]);\n\n  return HighlightJsDirective;\n}();\n\nHighlightJsDirective.ɵfac = function HighlightJsDirective_Factory(t) {\n  return new (t || HighlightJsDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgModel, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nHighlightJsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: HighlightJsDirective,\n  selectors: [[\"\", \"highlight-js\", \"\"]],\n  hostAttrs: [2, \"display\", \"none\"],\n  inputs: {\n    lang: \"lang\",\n    code: \"code\",\n    options: \"options\"\n  },\n  exportAs: [\"highlightJs\"]\n});\n\nHighlightJsDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgModel,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nHighlightJsDirective.propDecorators = {\n  options: [{\n    type: Input\n  }],\n  lang: [{\n    type: Input\n  }],\n  code: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HighlightJsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[highlight-js]',\n      host: {\n        style: 'display:none;'\n      },\n      exportAs: 'highlightJs'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.NgModel,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    lang: [{\n      type: Input\n    }],\n    code: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }]\n  });\n})();\n\nvar HighlightJsModule = function HighlightJsModule() {\n  _classCallCheck(this, HighlightJsModule);\n};\n\nHighlightJsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: HighlightJsModule\n});\nHighlightJsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function HighlightJsModule_Factory(t) {\n    return new (t || HighlightJsModule)();\n  },\n  imports: [[FormsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HighlightJsModule, {\n    declarations: function declarations() {\n      return [HighlightJsDirective];\n    },\n    imports: function imports() {\n      return [FormsModule];\n    },\n    exports: function exports() {\n      return [HighlightJsDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HighlightJsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [FormsModule],\n      declarations: [HighlightJsDirective],\n      exports: [HighlightJsDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { HighlightJsDirective, HighlightJsModule };","map":{"version":3,"sources":["../../lib/src/highlight-js.directive.ts","../../lib/src/highlight-js.module.ts","../../lib/ngx-highlight-js.ts"],"names":[],"mappings":";;;;;;;;IAuBa,oB;AACX,gCACU,EADV,EAEsB,OAFtB,EAG4B,GAH5B,EAGoC;AAAA;;AAF1B,SAAA,EAAA,GAAA,EAAA;AACY,SAAA,OAAA,GAAA,OAAA;AACM,SAAA,GAAA,GAAA,GAAA;AAGnB,SAAA,IAAA,GAAO,MAAP;AAFL;;;;WAaI,oBAAW,GAAX,EAAsB;AAC5B,aAAO,CAAC,GAAG,IAAI,EAAR,EACJ,OADI,CACI,IADJ,EACU,OADV,EAEJ,OAFI,CAEI,IAFJ,EAEU,MAFV,EAGJ,OAHI,CAGI,IAHJ,EAGU,MAHV,EAIJ,OAJI,CAII,IAJJ,EAIU,QAJV,EAKJ,OALI,CAKI,IALJ,EAKU,QALV,CAAP;AAMD;;;WAEO,gBAAI;AACV,WAAK,OAAL;AACA,WAAK,MAAL,GAAc,KAAK,GAAL,CAAS,aAAT,CAAuB,KAAvB,CAAd;;AACA,UAAI,KAAK,IAAT,EAAe;AACb,aAAK,MAAL,CAAY,SAAZ,GAAwB,KAAK,IAA7B;AACD;;AACD,WAAK,MAAL,CAAY,SAAZ,GACE,KAAK,IAAL,IAAa,KAAK,KAAK,EAAL,CAAQ,aAAR,CAAsB,SAAtB,CAAgC,IAAhC,EADpB;AAEA,WAAK,QAAL,GAAgB,KAAK,EAAL,CAAQ,aAAR,CAAsB,UAAtC;AACA,WAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,MAAhC,EAAwC,KAAK,EAAL,CAAQ,aAAR,CAAsB,WAA9D;AAEA,MAAA,IAAI,CAAC,SAAL,CAAc,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,KAAK,OAAX,CAAd;AACA,MAAA,IAAI,CAAC,cAAL,CAAoB,KAAK,MAAzB;AACD;;;WAEO,mBAAO;AACb,UAAI,KAAK,MAAT,EAAiB;AACf,aAAK,QAAL,CAAc,WAAd,CAA0B,KAAK,MAA/B;AACA,aAAK,MAAL,GAAc,IAAd;AACD;AACF;;;WAED,oBAAQ;AACN,WAAK,IAAL;AACD;;;WAED,2BAAe;AAAA;;AACb,UAAI,KAAK,OAAT,EAAkB;AAChB,aAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,YAAb,CAA0B,SAA1B,CAAoC,UAAC,GAAD,EAAI;AACzD,UAAA,KAAI,CAAC,IAAL,GAAY,KAAI,CAAC,UAAL,CAAgB,GAAhB,CAAZ;;AACA,UAAA,KAAI,CAAC,IAAL;AACD,SAHkB,CAAnB;AAID,OALD,MAKO;AACL,aAAK,YAAL;AACD;AACF;;;WAED,uBAAW;AACT,WAAK,OAAL;AACA,WAAK,eAAL;;AACA,UAAI,KAAK,WAAT,EAAsB;AACpB,aAAK,WAAL,CAAiB,WAAjB;AACD;AACF;;;WAEO,wBAAY;AAClB,UAAI,OAAO,gBAAP,KAA4B,WAAhC,EAA6C;AAC3C;AACD;;AACD,WAAK,QAAL,GAAgB,IAAI,gBAAJ,CAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAArB,CAAhB;AACA,WAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,EAAL,CAAQ,aAA9B,EAA6C;AAC3C,QAAA,aAAa,EAAE,IAD4B;AAE3C,QAAA,SAAS,EAAE,IAFgC;AAG3C,QAAA,OAAO,EAAE;AAHkC,OAA7C;AAKD;;;WAEO,2BAAe;AACrB,UAAI,CAAC,KAAK,QAAV,EAAoB;AAClB;AACD;;AACD,WAAK,QAAL,CAAc,UAAd;AACD;;;;;;qCAhGF,4B,CAAU,C,EAAA;AAAA,SAAA,KAAA,CACT,IAAA,oBADS,EACiB,MAAA,CAAA,iBAAA,CACpB,MAAA,CAAA,UADoB,CADjB,EAEH,MACC,CAAA,iBADD,CACkB,MAAA,CAAA,OADlB,EACkB,CADlB,CAFG,EAIR,MAAA,CAAA,iBAAA,CACS,QADT,CAJQ,CAAA;AAKc,C;;AACxB,oBAAA,CAAA,IAAA,GAAA,MAAA,CAAA,iBAAA,CAAA;AAAA,EAAA,IAAA,EAAA,oBAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA;AAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,MAAA,CAAA;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,IAAA,EAAA,MAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GAAA;AAAA,EAAA,QAAA,EAAA,CAAA,aAAA;AAAA,CAAA,CAAA;;AACK,oBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAA8C;AAAA,IAAA,IAAA,EArBlD;AAqBkD,GAA9C,EApBJ;AAAA,IAAA,IAAA,EAQO,OARP;AAQc,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAeX;AAfW,KAAA;AARd,GAoBI,EAGc;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EACf,MADe;AACT,MAAA,IAAA,EAAA,CAAC,QAAD;AADS,KAAA;AAAA,GAHd,CAAA;AAAA,CAAA;;AAIyB,oBAAA,CAAA,cAAA,GAAA;AAEP,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAArB;AAAqB,GAAA,CAFO;AAElB,EAAA,IAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAFkB;AAGlB,EAAA,IAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA;AAHkB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIjB,C;;ICtBD,iB;;;;gCALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,iBAAU,CAAA,IAAV,GAAsB,MAAA,CAAA,gBAAA,CACtB;AAAA,EAAA,OAAe,EAAA,SAAA,yBAAA,CACf,CADe,EACf;AAAA,WAAU,KAAA,CAAA,IAAA,iBAAA,GAAV;AAA+B,GAD/B;AAED,EAAA,OAAA,EAAA,CAAA,CAAA,WAAA,CAAA;AAFC,CADsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIG,C;ACTL;;;;;AAIA,SAAA,oBAAA,EAAA,iBAAA","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\ndeclare const hljs: any;\n\n@Directive({\n  selector: '[highlight-js]',\n  host: {\n    style: 'display:none;',\n  },\n  exportAs: 'highlightJs',\n})\nexport class HighlightJsDirective implements OnInit, AfterViewInit, OnDestroy {\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    @Optional() private ngModel: NgModel,\n    @Inject(DOCUMENT) private doc: any,\n  ) {}\n  @Input() options: any;\n  @Input() lang = 'html';\n  @Input() code: string;\n\n  protected codeEl: HTMLElement;\n  protected parentEl: HTMLElement;\n  private modelValue$: Subscription;\n\n  // #region Mutation\n\n  private observer: MutationObserver;\n\n  private escapeHTML(str: string): string {\n    return (str || '')\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  private init(): void {\n    this.destroy();\n    this.codeEl = this.doc.createElement('pre');\n    if (this.lang) {\n      this.codeEl.className = this.lang;\n    }\n    this.codeEl.innerHTML =\n      this.code || '' + this.el.nativeElement.innerHTML.trim();\n    this.parentEl = this.el.nativeElement.parentNode as HTMLElement;\n    this.parentEl.insertBefore(this.codeEl, this.el.nativeElement.nextSibling);\n\n    hljs.configure({ ...this.options });\n    hljs.highlightBlock(this.codeEl);\n  }\n\n  private destroy(): void {\n    if (this.codeEl) {\n      this.parentEl.removeChild(this.codeEl);\n      this.codeEl = null;\n    }\n  }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.ngModel) {\n      this.modelValue$ = this.ngModel.valueChanges.subscribe((res) => {\n        this.code = this.escapeHTML(res);\n        this.init();\n      });\n    } else {\n      this.initMutation();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n    this.destroyMutation();\n    if (this.modelValue$) {\n      this.modelValue$.unsubscribe();\n    }\n  }\n\n  private initMutation(): void {\n    if (typeof MutationObserver === 'undefined') {\n      return;\n    }\n    this.observer = new MutationObserver(this.init.bind(this));\n    this.observer.observe(this.el.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  private destroyMutation(): void {\n    if (!this.observer) {\n      return;\n    }\n    this.observer.disconnect();\n  }\n\n  // #endregionn\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightJsDirective } from './highlight-js.directive';\n\n@NgModule({\n  imports: [FormsModule],\n  declarations: [HighlightJsDirective],\n  exports: [HighlightJsDirective],\n})\nexport class HighlightJsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}