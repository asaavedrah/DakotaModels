{"version":3,"sources":["../../lib/src/highlight-js.directive.ts","../../lib/src/highlight-js.module.ts"],"names":["HighlightJsDirective","el","ngModel","doc","this","lang","prototype","escapeHTML","str","replace","init","destroy","codeEl","createElement","className","innerHTML","code","nativeElement","trim","parentEl","parentNode","insertBefore","nextSibling","hljs","configure","Object","assign","options","highlightBlock","removeChild","ngOnInit","ngAfterViewInit","_this","modelValue$","valueChanges","subscribe","res","initMutation","ngOnDestroy","destroyMutation","unsubscribe","MutationObserver","observer","bind","observe","characterData","childList","subtree","disconnect","Directive","args","selector","host","style","exportAs","ElementRef","NgModel","decorators","type","Optional","Inject","DOCUMENT","Input","NgModule","imports","FormsModule","declarations","exports"],"mappings":"6ZAwBE,SAAAA,EACUC,EACYC,EACMC,GAFlBC,KAAAH,GAAAA,EACYG,KAAAF,QAAAA,EACME,KAAAD,IAAAA,EAGnBC,KAAAC,KAAO,cAWRL,EAAAM,UAAAC,WAAA,SAAWC,GACjB,OAAQA,GAAO,IACZC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,WAGXT,EAAAM,UAAAI,KAAA,WACNN,KAAKO,UACLP,KAAKQ,OAASR,KAAKD,IAAIU,cAAc,OACjCT,KAAKC,OACPD,KAAKQ,OAAOE,UAAYV,KAAKC,MAE/BD,KAAKQ,OAAOG,UACVX,KAAKY,MAAQ,GAAKZ,KAAKH,GAAGgB,cAAcF,UAAUG,OACpDd,KAAKe,SAAWf,KAAKH,GAAGgB,cAAcG,WACtChB,KAAKe,SAASE,aAAajB,KAAKQ,OAAQR,KAAKH,GAAGgB,cAAcK,aAE9DC,KAAKC,UAASC,OAAAC,OAAA,GAAMtB,KAAKuB,UACzBJ,KAAKK,eAAexB,KAAKQ,SAGnBZ,EAAAM,UAAAK,QAAA,WACFP,KAAKQ,SACPR,KAAKe,SAASU,YAAYzB,KAAKQ,QAC/BR,KAAKQ,OAAS,OAIlBZ,EAAAM,UAAAwB,SAAA,WACE1B,KAAKM,QAGPV,EAAAM,UAAAyB,gBAAA,WAAA,IAAAC,EAAA5B,KACMA,KAAKF,QACPE,KAAK6B,YAAc7B,KAAKF,QAAQgC,aAAaC,WAAU,SAACC,GACtDJ,EAAKhB,KAAOgB,EAAKzB,WAAW6B,GAC5BJ,EAAKtB,UAGPN,KAAKiC,gBAITrC,EAAAM,UAAAgC,YAAA,WACElC,KAAKO,UACLP,KAAKmC,kBACDnC,KAAK6B,aACP7B,KAAK6B,YAAYO,eAIbxC,EAAAM,UAAA+B,aAAA,WAC0B,oBAArBI,mBAGXrC,KAAKsC,SAAW,IAAID,iBAAiBrC,KAAKM,KAAKiC,KAAKvC,OACpDA,KAAKsC,SAASE,QAAQxC,KAAKH,GAAGgB,cAAe,CAC3C4B,eAAe,EACfC,WAAW,EACXC,SAAS,MAIL/C,EAAAM,UAAAiC,gBAAA,WACDnC,KAAKsC,UAGVtC,KAAKsC,SAASM,uCA/FjBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,KAAM,CACJC,MAAO,iBAETC,SAAU,2DAnBVC,EAAAA,kBASOC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KAeXC,EAAAA,2CACAC,EAAAA,OAAMV,KAAA,CAACW,EAAAA,gDAETC,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,eCtBH,iCALCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,QAAS,CAACC,EAAAA,aACVC,aAAc,CAAClE,GACfmE,QAAS,CAACnE","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n  AfterViewInit,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\ndeclare const hljs: any;\n\n@Directive({\n  selector: '[highlight-js]',\n  host: {\n    style: 'display:none;',\n  },\n  exportAs: 'highlightJs',\n})\nexport class HighlightJsDirective implements OnInit, AfterViewInit, OnDestroy {\n  constructor(\n    private el: ElementRef<HTMLElement>,\n    @Optional() private ngModel: NgModel,\n    @Inject(DOCUMENT) private doc: any,\n  ) {}\n  @Input() options: any;\n  @Input() lang = 'html';\n  @Input() code: string;\n\n  protected codeEl: HTMLElement;\n  protected parentEl: HTMLElement;\n  private modelValue$: Subscription;\n\n  // #region Mutation\n\n  private observer: MutationObserver;\n\n  private escapeHTML(str: string): string {\n    return (str || '')\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  private init(): void {\n    this.destroy();\n    this.codeEl = this.doc.createElement('pre');\n    if (this.lang) {\n      this.codeEl.className = this.lang;\n    }\n    this.codeEl.innerHTML =\n      this.code || '' + this.el.nativeElement.innerHTML.trim();\n    this.parentEl = this.el.nativeElement.parentNode as HTMLElement;\n    this.parentEl.insertBefore(this.codeEl, this.el.nativeElement.nextSibling);\n\n    hljs.configure({ ...this.options });\n    hljs.highlightBlock(this.codeEl);\n  }\n\n  private destroy(): void {\n    if (this.codeEl) {\n      this.parentEl.removeChild(this.codeEl);\n      this.codeEl = null;\n    }\n  }\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.ngModel) {\n      this.modelValue$ = this.ngModel.valueChanges.subscribe((res) => {\n        this.code = this.escapeHTML(res);\n        this.init();\n      });\n    } else {\n      this.initMutation();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n    this.destroyMutation();\n    if (this.modelValue$) {\n      this.modelValue$.unsubscribe();\n    }\n  }\n\n  private initMutation(): void {\n    if (typeof MutationObserver === 'undefined') {\n      return;\n    }\n    this.observer = new MutationObserver(this.init.bind(this));\n    this.observer.observe(this.el.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  private destroyMutation(): void {\n    if (!this.observer) {\n      return;\n    }\n    this.observer.disconnect();\n  }\n\n  // #endregionn\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightJsDirective } from './highlight-js.directive';\n\n@NgModule({\n  imports: [FormsModule],\n  declarations: [HighlightJsDirective],\n  exports: [HighlightJsDirective],\n})\nexport class HighlightJsModule {}\n"]}