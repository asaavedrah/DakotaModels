(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('ngx-highlight-js', ['exports', '@angular/core', '@angular/common', '@angular/forms'], factory) :
    (global = global || self, factory(global['ngx-highlight-js'] = {}, global.ng.core, global.ng.common, global.ng.forms));
}(this, (function (exports, core, common, forms) { 'use strict';

    var HighlightJsDirective = /** @class */ (function () {
        function HighlightJsDirective(el, ngModel, doc) {
            this.el = el;
            this.ngModel = ngModel;
            this.doc = doc;
            this.lang = 'html';
        }
        HighlightJsDirective.prototype.escapeHTML = function (str) {
            return (str || '')
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;')
                .replace(/'/g, '&apos;');
        };
        HighlightJsDirective.prototype.init = function () {
            this.destroy();
            this.codeEl = this.doc.createElement('pre');
            if (this.lang) {
                this.codeEl.className = this.lang;
            }
            this.codeEl.innerHTML =
                this.code || '' + this.el.nativeElement.innerHTML.trim();
            this.parentEl = this.el.nativeElement.parentNode;
            this.parentEl.insertBefore(this.codeEl, this.el.nativeElement.nextSibling);
            hljs.configure(Object.assign({}, this.options));
            hljs.highlightBlock(this.codeEl);
        };
        HighlightJsDirective.prototype.destroy = function () {
            if (this.codeEl) {
                this.parentEl.removeChild(this.codeEl);
                this.codeEl = null;
            }
        };
        HighlightJsDirective.prototype.ngOnInit = function () {
            this.init();
        };
        HighlightJsDirective.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (this.ngModel) {
                this.modelValue$ = this.ngModel.valueChanges.subscribe(function (res) {
                    _this.code = _this.escapeHTML(res);
                    _this.init();
                });
            }
            else {
                this.initMutation();
            }
        };
        HighlightJsDirective.prototype.ngOnDestroy = function () {
            this.destroy();
            this.destroyMutation();
            if (this.modelValue$) {
                this.modelValue$.unsubscribe();
            }
        };
        HighlightJsDirective.prototype.initMutation = function () {
            if (typeof MutationObserver === 'undefined') {
                return;
            }
            this.observer = new MutationObserver(this.init.bind(this));
            this.observer.observe(this.el.nativeElement, {
                characterData: true,
                childList: true,
                subtree: true,
            });
        };
        HighlightJsDirective.prototype.destroyMutation = function () {
            if (!this.observer) {
                return;
            }
            this.observer.disconnect();
        };
        return HighlightJsDirective;
    }());
    HighlightJsDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[highlight-js]',
                    host: {
                        style: 'display:none;',
                    },
                    exportAs: 'highlightJs',
                },] }
    ];
    HighlightJsDirective.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: forms.NgModel, decorators: [{ type: core.Optional }] },
        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }
    ]; };
    HighlightJsDirective.propDecorators = {
        options: [{ type: core.Input }],
        lang: [{ type: core.Input }],
        code: [{ type: core.Input }]
    };

    var HighlightJsModule = /** @class */ (function () {
        function HighlightJsModule() {
        }
        return HighlightJsModule;
    }());
    HighlightJsModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [forms.FormsModule],
                    declarations: [HighlightJsDirective],
                    exports: [HighlightJsDirective],
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.HighlightJsDirective = HighlightJsDirective;
    exports.HighlightJsModule = HighlightJsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-highlight-js.umd.js.map
