import { __decorate, __read, __spread } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { dismissOnDestroyToken, fireOnInitToken, swalProviderToken } from './di';
import { SwalPortalComponent } from './swal-portal.component';
import { SwalPortalDirective } from './swal-portal.directive';
import { SwalComponent } from './swal.component';
import { SwalDirective } from './swal.directive';
import { SweetAlert2LoaderService } from './sweetalert2-loader.service';
import * as ɵngcc0 from '@angular/core';
export function provideDefaultSwal() {
    return import('sweetalert2');
}
var SweetAlert2Module = /** @class */ (function () {
    function SweetAlert2Module() {
    }
    SweetAlert2Module_1 = SweetAlert2Module;
    SweetAlert2Module.forRoot = function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: SweetAlert2Module_1,
            providers: [
                SweetAlert2LoaderService,
                { provide: swalProviderToken, useValue: options.provideSwal || provideDefaultSwal },
                { provide: fireOnInitToken, useValue: options.fireOnInit || false },
                { provide: dismissOnDestroyToken, useValue: options.dismissOnDestroy || true }
            ]
        };
    };
    SweetAlert2Module.forChild = function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: SweetAlert2Module_1,
            providers: __spread(options.provideSwal ? [
                SweetAlert2LoaderService,
                { provide: swalProviderToken, useValue: options.provideSwal }
            ] : [], options.fireOnInit !== undefined ? [
                { provide: fireOnInitToken, useValue: options.fireOnInit }
            ] : [], options.dismissOnDestroy !== undefined ? [
                { provide: dismissOnDestroyToken, useValue: options.dismissOnDestroy }
            ] : [])
        };
    };
    var SweetAlert2Module_1;
SweetAlert2Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SweetAlert2Module });
SweetAlert2Module.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SweetAlert2Module_Factory(t) { return new (t || SweetAlert2Module)(); }, imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SweetAlert2Module, { declarations: function () { return [SwalDirective, SwalComponent, SwalPortalDirective, SwalPortalComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SwalComponent, SwalPortalDirective, SwalDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SweetAlert2Module, [{
        type: NgModule,
        args: [{
                declarations: [
                    SwalDirective, SwalComponent, SwalPortalDirective, SwalPortalComponent
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    SwalComponent, SwalPortalDirective, SwalDirective
                ],
                entryComponents: [
                    SwalComponent, SwalPortalComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return SweetAlert2Module;
}());
export { SweetAlert2Module };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dlZXRhbGVydDIubW9kdWxlLmpzIiwic291cmNlcyI6WyJAc3dlZXRhbGVydDIvbmd4LXN3ZWV0YWxlcnQyL2xpYi9zd2VldGFsZXJ0Mi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFnQix3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQVF0RixNQUFNLFVBQVUsa0JBQWtCO0FBQ2xDLElBQUksT0FBTyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDakMsQ0FBQztBQWdCRDtBQUNvQixJQURwQjtBQUErQixJQThCL0IsQ0FBQztBQUNELDBCQS9CYSxpQkFBaUI7QUFBRSxJQUNkLHlCQUFPLEdBQXJCLFVBQXNCLE9BQXFDO0FBQUksUUFBekMsd0JBQUEsRUFBQSxZQUFxQztBQUFJLFFBQzNELE9BQU87QUFDZixZQUFZLFFBQVEsRUFBRSxtQkFBaUI7QUFDdkMsWUFBWSxTQUFTLEVBQUU7QUFDdkIsZ0JBQWdCLHdCQUF3QjtBQUN4QyxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxXQUFXLElBQUksa0JBQWtCLEVBQUU7QUFDbkcsZ0JBQWdCLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLFVBQVUsSUFBSSxLQUFLLEVBQUU7QUFDbkYsZ0JBQWdCLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLElBQUksSUFBSSxFQUFFO0FBQzlGLGFBQWE7QUFDYixTQUFTLENBQUM7QUFDVixJQUFJLENBQUM7QUFFTCxJQUFrQiwwQkFBUSxHQUF0QixVQUF1QixPQUFxQztBQUFJLFFBQXpDLHdCQUFBLEVBQUEsWUFBcUM7QUFBSSxRQUM1RCxPQUFPO0FBQ2YsWUFBWSxRQUFRLEVBQUUsbUJBQWlCO0FBQ3ZDLFlBQVksU0FBUyxXQUNGLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLGdCQUFvQix3QkFBd0I7QUFDNUMsZ0JBQW9CLEVBQUUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsV0FBVyxFQUFFO0FBQ2pGLGFBQWlCLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFDSCxPQUFPLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDdEQsZ0JBQW9CLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLFVBQVUsRUFBRTtBQUM5RSxhQUFpQixDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ0gsT0FBTyxDQUFDLGdCQUFnQixLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDNUQsZ0JBQW9CLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUU7QUFDMUYsYUFBaUIsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUNUO0FBQ2IsU0FBUyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0o7SUE5QlksaUJBQWlCLDhDQWQ3QixRQUFRLENBQUM7V0FDTixZQUFZLEVBQUUsa0JBQ1YsYUFBYSxFQUFFLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsY0FDekUsY0FDRCxPQUFPLEVBQUU7Y0FDTDtDQUFZO0FBQ2YsY0FDRCxPQUFPLEVBQUUsa0JBQ0wsYUFBYSxFQUFFLG1CQUFtQixFQUFFLGFBQWEsY0FDcEQsY0FDRCxlQUFlLEVBQUUsa0JBQ2IsYUFBYSxFQUFFLG1CQUFtQixjQUNyQyxVQUNKLENBQUMsUUFDVyxpQkFBaUIsQ0E4QjdCOzs7Ozs7Ozs7Ozs7Ozs7OztnREFDRDtBQUFDLElBREQsd0JBQUM7QUFDQSxDQURBLEFBOUJELElBOEJDO0FBQ0QsU0EvQmEsaUJBQWlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBkaXNtaXNzT25EZXN0cm95VG9rZW4sIGZpcmVPbkluaXRUb2tlbiwgc3dhbFByb3ZpZGVyVG9rZW4gfSBmcm9tICcuL2RpJztcbmltcG9ydCB7IFN3YWxQb3J0YWxDb21wb25lbnQgfSBmcm9tICcuL3N3YWwtcG9ydGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTd2FsUG9ydGFsRGlyZWN0aXZlIH0gZnJvbSAnLi9zd2FsLXBvcnRhbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3dhbENvbXBvbmVudCB9IGZyb20gJy4vc3dhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3dhbERpcmVjdGl2ZSB9IGZyb20gJy4vc3dhbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3dhbFByb3ZpZGVyLCBTd2VldEFsZXJ0MkxvYWRlclNlcnZpY2UgfSBmcm9tICcuL3N3ZWV0YWxlcnQyLWxvYWRlci5zZXJ2aWNlJztcblxuZXhwb3J0IGludGVyZmFjZSBTd2VldGFsZXJ0Mk1vZHVsZUNvbmZpZyB7XG4gICAgcHJvdmlkZVN3YWw/OiBTd2FsUHJvdmlkZXI7XG4gICAgZmlyZU9uSW5pdD86IGJvb2xlYW47XG4gICAgZGlzbWlzc09uRGVzdHJveT86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlRGVmYXVsdFN3YWwoKSB7XG4gICAgcmV0dXJuIGltcG9ydCgnc3dlZXRhbGVydDInKTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgU3dhbERpcmVjdGl2ZSwgU3dhbENvbXBvbmVudCwgU3dhbFBvcnRhbERpcmVjdGl2ZSwgU3dhbFBvcnRhbENvbXBvbmVudFxuICAgIF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgU3dhbENvbXBvbmVudCwgU3dhbFBvcnRhbERpcmVjdGl2ZSwgU3dhbERpcmVjdGl2ZVxuICAgIF0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgICAgIFN3YWxDb21wb25lbnQsIFN3YWxQb3J0YWxDb21wb25lbnRcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFN3ZWV0QWxlcnQyTW9kdWxlIHtcbiAgICBwdWJsaWMgc3RhdGljIGZvclJvb3Qob3B0aW9uczogU3dlZXRhbGVydDJNb2R1bGVDb25maWcgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U3dlZXRBbGVydDJNb2R1bGU+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBTd2VldEFsZXJ0Mk1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIFN3ZWV0QWxlcnQyTG9hZGVyU2VydmljZSxcbiAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IHN3YWxQcm92aWRlclRva2VuLCB1c2VWYWx1ZTogb3B0aW9ucy5wcm92aWRlU3dhbCB8fCBwcm92aWRlRGVmYXVsdFN3YWwgfSxcbiAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IGZpcmVPbkluaXRUb2tlbiwgdXNlVmFsdWU6IG9wdGlvbnMuZmlyZU9uSW5pdCB8fCBmYWxzZSB9LFxuICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogZGlzbWlzc09uRGVzdHJveVRva2VuLCB1c2VWYWx1ZTogb3B0aW9ucy5kaXNtaXNzT25EZXN0cm95IHx8IHRydWUgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZm9yQ2hpbGQob3B0aW9uczogU3dlZXRhbGVydDJNb2R1bGVDb25maWcgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U3dlZXRBbGVydDJNb2R1bGU+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBTd2VldEFsZXJ0Mk1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMucHJvdmlkZVN3YWwgPyBbXG4gICAgICAgICAgICAgICAgICAgIFN3ZWV0QWxlcnQyTG9hZGVyU2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgeyBwcm92aWRlOiBzd2FsUHJvdmlkZXJUb2tlbiwgdXNlVmFsdWU6IG9wdGlvbnMucHJvdmlkZVN3YWwgfVxuICAgICAgICAgICAgICAgIF0gOiBbXSxcbiAgICAgICAgICAgICAgICAuLi5vcHRpb25zLmZpcmVPbkluaXQgIT09IHVuZGVmaW5lZCA/IFtcbiAgICAgICAgICAgICAgICAgICAgeyBwcm92aWRlOiBmaXJlT25Jbml0VG9rZW4sIHVzZVZhbHVlOiBvcHRpb25zLmZpcmVPbkluaXQgfVxuICAgICAgICAgICAgICAgIF0gOiBbXSxcbiAgICAgICAgICAgICAgICAuLi5vcHRpb25zLmRpc21pc3NPbkRlc3Ryb3kgIT09IHVuZGVmaW5lZCA/IFtcbiAgICAgICAgICAgICAgICAgICAgeyBwcm92aWRlOiBkaXNtaXNzT25EZXN0cm95VG9rZW4sIHVzZVZhbHVlOiBvcHRpb25zLmRpc21pc3NPbkRlc3Ryb3kgfVxuICAgICAgICAgICAgICAgIF0gOiBbXVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==