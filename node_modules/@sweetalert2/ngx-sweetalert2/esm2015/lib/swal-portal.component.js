import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
/**
 * @internal
 * Holds a consumer's Angular template and displays it on a Sweet Alert.
 * See SwalPortalDirective for info about the covered feature.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function SwalPortalComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
let SwalPortalComponent = class SwalPortalComponent {
    constructor() {
        this.template = null;
    }
};
SwalPortalComponent.ɵfac = function SwalPortalComponent_Factory(t) { return new (t || SwalPortalComponent)(); };
SwalPortalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SwalPortalComponent, selectors: [["swal-portal"]], inputs: { template: "template" }, decls: 1, vars: 1, consts: [[4, "ngTemplateOutlet"]], template: function SwalPortalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SwalPortalComponent_ng_container_0_Template, 1, 0, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.template);
    } }, directives: [ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
__decorate([
    Input()
], SwalPortalComponent.prototype, "template", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SwalPortalComponent, [{
        type: Component,
        args: [{
                selector: 'swal-portal',
                template: '<ng-container *ngTemplateOutlet="template"></ng-container>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { template: [{
            type: Input
        }] }); })();
export { SwalPortalComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhbC1wb3J0YWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJAc3dlZXRhbGVydDIvbmd4LXN3ZWV0YWxlcnQyL2xpYi9zd2FsLXBvcnRhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRXZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7Ozs7OztBQU1ILElBQWEsbUJBQW1CLEdBQWhDLE1BQWEsbUJBQW1CO0FBQ2hDLElBREE7QUFBZ0IsUUFDSSxhQUFRLEdBQTRCLElBQUksQ0FBQztBQUM3RCxJQUFBLENBQUM7QUFDRCxDQURDOzs7Ozs7d0ZBQUE7QUFEWTtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLHFEQUFnRDtBQURoRCxtQkFBbUIsb0JBTC9CLFNBQVMsQ0FBQyxVQUNQLFFBQVEsRUFBRTtJQUFhLFVBQ3ZCLFFBQVEsRUFBRTs7O0NBQTRELFVBQ3RFLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLE1BQ2xELENBQUMsSUFDVztBQUFtQixDQUUvQjs7OztvQkFDRDtBQUFDLFNBSFksbUJBQW1CO0FBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGludGVybmFsXG4gKiBIb2xkcyBhIGNvbnN1bWVyJ3MgQW5ndWxhciB0ZW1wbGF0ZSBhbmQgZGlzcGxheXMgaXQgb24gYSBTd2VldCBBbGVydC5cbiAqIFNlZSBTd2FsUG9ydGFsRGlyZWN0aXZlIGZvciBpbmZvIGFib3V0IHRoZSBjb3ZlcmVkIGZlYXR1cmUuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnc3dhbC1wb3J0YWwnLFxuICAgIHRlbXBsYXRlOiAnPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+JyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBTd2FsUG9ydGFsQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKSBwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4gfCBudWxsID0gbnVsbDtcbn1cbiJdfQ==